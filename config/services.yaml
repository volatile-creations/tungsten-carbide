# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            EventSauce\EventSourcing\AggregateRootRepository $userRepository: '@domain.user.repository'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Message/'
            - '../src/Migration/'
            - '../src/Kernel.php'

    _instanceof:
        App\MessageHandler\QueryHandlerInterface:
            tags:
                - name: messenger.message_handler
                  bus: app.query.bus

        App\MessageHandler\CommandHandlerInterface:
            tags:
                - name: messenger.message_handler
                  bus: app.command.bus

        App\MessageHandler\EventHandlerInterface:
            tags:
                - name: messenger.message_handler
                  bus: app.event.bus

        EventSauce\EventSourcing\MessageConsumer:
            tags:
                - name: messenger.message_handler
                  bus: app.command.bus

    domain.message_serializer:
        class: EventSauce\EventSourcing\Serialization\ConstructingMessageSerializer

    domain.message_repository.abstract:
        abstract: true
        class: EventSauce\MessageRepository\DoctrineMessageRepository\DoctrineMessageRepository
        arguments:
            $serializer: '@domain.message_serializer'

    domain.aggregate_root_repository.abstract:
        abstract: true
        class: EventSauce\EventSourcing\EventSourcedAggregateRootRepository
        arguments:
            $dispatcher: '@App\MessageDispatcher\MessageBusDispatcher'

    domain.user.message_repository:
        parent: domain.message_repository.abstract
        arguments:
            $tableName: user_events

    domain.user.repository:
        parent: domain.aggregate_root_repository.abstract
        arguments:
            $aggregateRootClassName: App\Domain\User\User
            $messageRepository: '@domain.user.message_repository'
